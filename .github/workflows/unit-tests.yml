# SPDX-FileCopyrightText: 2024 Christina SÃ¸rensen
# SPDX-License-Identifier: EUPL-1.2
name: Unit tests
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true
env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: --deny warnings
  msrv: 1.78
jobs:
  security_audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@cargo-deny
      - name: Scan for vulnerabilities
        run: cargo deny check
  check_if_pr:
    runs-on: ubuntu-latest
    outputs:
      is_pr: ${{ steps.check.outputs.is_pr }}
    steps:
      - name: Check if it's a PR
        id: check
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "is_pr=true" >> $GITHUB_OUTPUT
          else
            echo "is_pr=false" >> $GITHUB_OUTPUT
          fi
  no-merge-commits:
    needs: check_if_pr
    if: needs.check_if_pr.outputs.is_pr == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run test
        uses: NexusPHP/no-merge-commits@v2.2.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
  conventional:
    needs: [check_if_pr, no-merge-commits]
    name: Conventional Commits
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: webiny/action-conventional-commits@v1.3.0
  unit-tests:
    needs: conventional
    runs-on: macos-latest
    continue-on-error: ${{ matrix.rust == 'nightly' }}
    strategy:
      matrix:
        rust: [msrv, stable, beta, nightly]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - run: rustup toolchain install ${{ matrix.rust == 'msrv' && env.msrv || matrix.rust }} --profile minimal
      - uses: Swatinem/rust-cache@v2
      - name: Install cargo-hack
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: cargo install cargo-hack
      - name: Run rustfmt checks
        run: cargo fmt --check
      - name: Run clippy lints
        run: cargo clippy -- -D warnings
      - name: Run unit tests
        run: cargo hack test




